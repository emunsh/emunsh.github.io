{"version":3,"sources":["components/Form.js","components/ListOfFollowers.js","components/User.js","App.js","serviceWorker.js","index.js"],"names":["Form","handleSubmit","e","preventDefault","nickname","_this","refs","value","props","getUserFolowers","react_default","a","createElement","onSubmit","this","className","ref","type","defaultValue","Component","ListOfFllowers","state","data","search","sorted","clickHandle","url","target","getAttribute","getUser","handleSelect","select","handeChange","nickName","localSearch","filter","item","login","indexOf","setState","length","sortHandle","targetSort","sort","b","_this2","Fragment","onChange","onClick","map","key","id","href","html_url","rel","src","avatar_url","alt","data_url","User","showUserInfo","public_repos","location","followers","created_at","App","currentUserData","currentUserFolowers","error","message","_callee","api_url","regenerator_default","wrap","_context","prev","next","fetch","concat","sent","json","stop","_callee2","_context2","components_Form","components_User","ListOfFollowers","React","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.998a2bde.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Form extends Component {\r\n    handleSubmit= (e) => {\r\n        e.preventDefault();\r\n        const nickname = this.refs.nickname.value;\r\n        this.props.getUserFolowers(nickname);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className='searchForm'>\r\n                <p>Введите имя пользователя</p>\r\n                <input ref=\"nickname\" type=\"text\" defaultValue=''/>\r\n                <input type=\"submit\"  value=\"Искать\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react';\r\n\r\nclass ListOfFllowers extends Component {\r\n\r\n    state = {\r\n        data: this.props.data,\r\n        search: false,\r\n        sorted: false\r\n    }\r\n\r\n    clickHandle = (e) => {\r\n        const url = e.target.getAttribute('data_url');\r\n        this.props.getUser(url);\r\n    }\r\n\r\n    handleSelect = (e) => {\r\n        e.target.select();\r\n    }\r\n\r\n    handeChange = (e) => {\r\n        let nickName = this.refs.localSearch.value;\r\n        let data = this.props.data;\r\n\r\n        data = data.filter(function (item) {\r\n            return item.login.indexOf(nickName) >= 0;\r\n        })\r\n        this.setState({\r\n            search: true\r\n        })\r\n        if (data.length > 0) {\r\n            this.setState({\r\n                data: data,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                data: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    sortHandle = (targetSort) => {\r\n        let data = this.props.data;\r\n\r\n        if (this.state.sorted) {\r\n            data.sort(function (a,b) {\r\n                if (a[targetSort] > b[targetSort]) {\r\n                    return 1\r\n                }\r\n                if (a[targetSort] < b[targetSort]) {\r\n                    return -1\r\n                }\r\n                return 0\r\n            });\r\n        } else {\r\n            data.sort(function (a,b) {\r\n                if (a[targetSort] < b[targetSort]) {\r\n                    return 1\r\n                }\r\n                if (a[targetSort] > b[targetSort]) {\r\n                    return -1\r\n                }\r\n                return 0\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            data: data,\r\n            sorted: !this.state.sorted\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                {(this.state.data.length > 1 || this.state.search) &&\r\n                    <React.Fragment>\r\n                        <div className=\"search\">\r\n                            Введите имя пользователя для поиска среди подписчиков <input type=\"text\" onChange={this.handeChange} onClick={this.handleSelect} ref=\"localSearch\" defaultValue=\"Поиск\" />\r\n                        </div>\r\n                    </React.Fragment>\r\n                }\r\n                {this.state.data.length > 1 &&\r\n                    <React.Fragment>\r\n                        <div className=\"sort\">\r\n                            <input type=\"button\" onClick={() => this.sortHandle('login')} defaultValue=\"Сортировка по имени\" />\r\n                            <input type=\"button\" onClick={() => this.sortHandle('id')} defaultValue=\"Сортировка по ID\" />\r\n                        </div>\r\n                    </React.Fragment>\r\n                }\r\n                <div className='listOfFollowers'>\r\n                    {this.state.data.length > 0 &&\r\n                        this.state.data.map((item) => {\r\n                            return (\r\n                                <div key={item.id} className=\"follower__user\">\r\n                                    <div className=\"follower__avatar\">\r\n                                        <a href={item.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                            <img src={item.avatar_url} alt={item.login}/>\r\n                                        </a>\r\n                                        <p>{item.login}</p>\r\n                                        <input onClick={this.clickHandle} data_url={item.url} type=\"button\" rel=\"getdata\" value=\"Подробнее\" />\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    {this.state.data.length < 1 &&\r\n                        <div>У пользователя нет подписчиков</div>\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListOfFllowers;","import React, {Component} from 'react';\r\n\r\nclass User extends Component {\r\n    showUserInfo = () => {\r\n        const data = this.props.data;\r\n        return (\r\n            <div className='userInfo'>\r\n                <div className=\"follower__avatar\">\r\n                    <p>\r\n                        <a href={data.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <img src={data.avatar_url} alt={data.login}/>\r\n                        </a>\r\n                    </p>\r\n                    <p>Логин пользователя: {data.login}</p>\r\n                    <p>Количество репозиториев: {data.public_repos}</p>\r\n                    <p>Место нахождения: {data.location}</p>\r\n                    <p>Количество подписчиков: {data.followers}</p>\r\n                    <p>Дата создания профиля: {data.created_at}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.data &&\r\n                    this.showUserInfo()\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User;","import React from 'react';\nimport Form from './components/Form'\nimport ListOfFllowers from './components/ListOfFollowers';\nimport User from './components/User';\nimport styles from './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    currentUserData: false,\n    currentUserFolowers: false,\n    error: false,\n    message: false\n  }\n\n  getUserFolowers = async (nickname) => {\n    this.setState({\n      currentUserFolowers: false,\n    });\n    const api_url = await fetch(`https://api.github.com/users/${nickname}/followers`);\n    const data = await api_url.json();\n    if (data.message) {\n      this.setState({\n        error: true,\n        message: data.message\n      });\n    } else {\n      this.setState({\n        currentUserFolowers: data,\n        error: false\n      });\n    }\n  }\n\n  getUser = async (url) => {\n    const api_url = await fetch(url);\n    const data = await api_url.json();\n    if (data.message) {\n      this.setState({\n        error: true\n      });\n    } else {\n      this.setState({\n        currentUserData: data,\n        error: false\n      });\n    }\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        <Form getUserFolowers={this.getUserFolowers}/>\n        {this.state.error && \n          <div className=\"error\">{this.state.message}</div>\n        }\n        <User data={this.state.currentUserData} />\n        {this.state.currentUserFolowers && \n          <ListOfFllowers data={this.state.currentUserFolowers} getUser={this.getUser}/>\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}